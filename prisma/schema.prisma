generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  snippets Snippet[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Language {
  id   String  @id @default(cuid())
  name String  @unique
  slug String  @unique
  icon String?

  snippets Snippet[]
}

model Tag {
  id   String @id @default(cuid())
  name String @unique
  slug String @unique

  snippets SnippetTag[]
}

model Snippet {
  id          String   @id @default(cuid())
  title       String
  description String?
  code        String   @db.Text
  complexity  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  language   Language     @relation(fields: [languageId], references: [id])
  languageId String
  tags       SnippetTag[]

  @@index([userId])
  @@index([languageId])
}

model SnippetTag {
  id        String  @id @default(cuid())
  snippet   Snippet @relation(fields: [snippetId], references: [id], onDelete: Cascade)
  snippetId String
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId     String

  @@unique([snippetId, tagId])
}
